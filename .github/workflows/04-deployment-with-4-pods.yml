name: K-04 Deployment with 4 Pods

on:
  push:
    paths:
      - 'kubernetes/04-deployment-with-4-pods/**'
      - '.github/workflows/04-deployment-with-4-pods.yml'
env:
  IP_COUNT: "4"
  TASK_FOLDER: "${{ github.workspace }}/kubernetes/04-deployment-with-4-pods"
  PORT: "12378"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup k3d
        uses: nolar/setup-k3d-k3s@v1

      - name: Verify Docker installation
        run: docker version

      - name: Verify Kubernetes installation
        run: k3d --version

      - name: Create cluster with registry
        run: k3d cluster create demo-cluster --registry-create demo-registry:12345

      - name: Apply the manifests
        run: kubectl apply -f ${{ github.workspace }}/kubernetes/04-deployment-with-4-pods/manifests

      - name: Wait for pods to be ready
        run: ./check_exit_code.sh 'kubectl wait $(kubectl get pods -n default -l app=04-deployment-with-4-pods -o name) -n default --for=condition=Ready'

      - name: Add port to cluster
        run: k3d cluster edit demo-cluster --port-add ${{ env.PORT}}:4590@loadbalancer

      - name: Test load balancing
        run: |
          SERVER_ADDRESS=()
          for i in {1..20}; do
          ADDRESS_VALUE=$(curl -s http://localhost:${{ env.PORT}} | grep -E -o "([0-9]{1,3}\.){1,3}[[:digit:]]{1,3}")
          if [[ -n "$ADDRESS_VALUE" ]] && ! [[ ${SERVER_ADDRESS[@]} =~ $ADDRESS_VALUE ]]; then
          SERVER_ADDRESS+=("$ADDRESS_VALUE")
          fi
          sleep 1
          done
          
          echo "Unique address values:"
          for IP_VALUE in "${SERVER_ADDRESS[@]}"; do
          echo "$IP_VALUE"
          done
          
          IP_COUNT=${#sSERVER_ADDRESS[@]}
          echo "Number of unique address values: $IP_COUNT"
          echo "IP_COUNT=${IP_COUNT}" >> $GITHUB_ENV

      - name: Check ip addresses count values. Expected count- "4"
        run: |
          if [[ "${{ env.IP_COUNT }}" == "${{ env.IP_COUNT }}" ]]; then
          echo "Load balancing is shared  between 4 pods. Count of pods: $IP_COUNT"
          else
          echo "Error: Load balancing is not shared between 4 pods"
          exit 1
          fi
