name: K-03 Hello World Node in K3d
on:
  push:
    paths: 
      - './kubernetes/03-hello-world-node-in-k3d/**'
      - '.github/workflows/03-hello-world-node-in-k3d.yml'  
env:
  POD_OUTPUT: "Hello World !!!"
  TASK_FOLDER: "${{ github.workspace }}/kubernetes/03-hello-world-node-in-k3d"
  POD_CONTAINER_NAME: "03-hello-world-node"
  CUSTOM_IMAGE: "localhost:12345/03-hello-world-node-in-k3d:0.1"
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup k3d
      uses: nolar/setup-k3d-k3s@v1

    - name: Check if docker is available
      run: docker info
   
    - name: Check if kubernetes is available
      run: k3d version
    
    - name: Check if src directory exists
      run: |
        if [ -d ${TASK_FOLDER}/src ]; then
        echo "Directory 'src' exists"
        else 
        echo "Error: Directory 'src' does not exist"
        exit 1
        fi
    
    - name: Check if manifests folder exists
      run: |
        if [ -d ${TASK_FOLDER}/manifests ]; then
        echo "Directory 'manifests' exists"
        else 
        echo "Error: manifests does not exist"
        exit 1
        fi
    
    - name: Check if src directory contains Dockerfile and .js files
      run: |
        if [ -f ${TASK_FOLDER}/src/Dockerfile ] || [ -n "$(find ${TASK_FOLDER}/src -name '*.js' -type f)" ]; then
        ls ${TASK_FOLDER}/src
        echo "All files exist inside 'src' "
        else
        echo "Error: Files does not exist inside 'src' "
        exit 1
        fi
        
    - name: Check if manifests directory contains pod.yml file
      run: |
        if [ -f ${TASK_FOLDER}/manifests/pod.yml ]; then
        ls ${TASK_FOLDER}/manifests
        echo "All files exist inside 'manifests' "
        else
        echo "Error: Files does not exist inside 'manifests' "
        exit 1
        fi

    - name: Create cluster
      run: k3d cluster create demo-cluster --registry-create demo-registry:12345

    - name: Build, tag and push the image
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.TASK_FOLDER }}/src
        file: ${{ env.TASK_FOLDER }}/src/Dockerfile
        push: true
        tags: ${{ env.CUSTOM_IMAGE }}
        
    - name: Check if tagged image was created successfully 
      run: |
        TAGGED_IMAGE=$(docker images -q ${{ env.CUSTOM_IMAGE }} )
        if [ -n "$TAGGED_IMAGE" ]; then
        echo "Image $TAGGED_IMAGE exists"
        else
        echo "Image $TAGGED_IMAGE does not exist"
        exit 1
        fi
        
    - name: Apply manifest 
      run: |
        kubectl apply -f ${TASK_FOLDER}/manifests
        kubectl wait pod ${{ env.POD_CONTAINER_NAME }} --for=condition=Ready --timeout=30s
    
    - name: Check if pod's logs are available
      run: |
        OUTPUT=$(kubectl logs 03-hello-world-node -c ${{ env.POD_CONTAINER_NAME }})
        echo "OUTPUT=${OUTPUT}" >> $GITHUB_ENV
        echo "OUTPUT=${OUTPUT}"
    
    - name: Verify output. Expected output - "Hello World !!!"
      run: |
        if [[ "${{ env.OUTPUT }}" == "${{ env.POD_OUTPUT }}" ]]; then
        echo "Log output contains 'Hello World !!!'"
        else
        echo "Error: Log output does not contain 'Hello World !!!'"
        exit 1
        fi
        
    - name: Check if pod did not restart
      run: |
        RESTARTS=$(kubectl describe pod 03-hello-world-node | grep -i 'restart count' | grep -o -E '[0-9]{0,2}' | awk '{s+=$1} END {print s}')
        echo "Restart count: $RESTARTS"
        if [ "$RESTARTS" -gt 0 ]; then
        echo "Error: Pod restarted $RESTARTS times."
        exit 1
        fi


 
    
   
