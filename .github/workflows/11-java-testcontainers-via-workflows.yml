name: K-11 Java Testcontainers via Argo Workflows
on:
  push:
    paths:
      - '.github/workflows/11-java-testcontainers-via-workflows.yml'
      - 'kubernetes/11-java-testcontainers-via-workflows/**'
env:
  BUILD_USER_ID: "$(id -u)"
  BUILD_GROUP_ID: "$(id -g)"
  CHECK_BUILD_OUTPUT: "BUILD SUCCESSFUL"
  WORK_PATH: "${{ github.workspace }}/kubernetes/11-java-testcontainers-via-workflows"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup k3d
        uses: nolar/setup-k3d-k3s@v1

      - name: Install w3m on Ubuntu
        run: sudo apt-get update && sudo apt-get install -y w3m

      - name: Verify Docker installation
        run: docker version

      - name: Verify Kubernetes installation
        run: k3d --version

      - name: Initialize and update submodule
        run: |
          git submodule update --init --recursive submodules/testcontainers-java
          cp -r ./submodules/testcontainers-java ${WORK_PATH}/src
          if [ -d ${WORK_PATH}/src/testcontainers-java ]; then
          echo "Submodule directory exists"
          else
          echo "Submodule directory does not exist"
          exit 1
          fi

      - name: Create report folder and check if it was successfully created
        run: |
          mkdir ${WORK_PATH}/report
          if [ -d ${WORK_PATH}/report ]; then
          echo "Report folder was created"
          ls ${WORK_PATH}/report
          else
          echo "Report folder wasn't created"
          exit 1
          fi

      - name: Create cluster with registry
        run: |
          k3d cluster create demo-cluster \
          --registry-create demo-registry:12345 \
          --volume ${WORK_PATH}/report:/report

      - name: Create namespace and install argo via helm
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update
          helm upgrade --install --cleanup-on-fail argowork argo/argo-workflows \
          --namespace argo --create-namespace --wait

      - name: Build, tag and push the image
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.WORK_PATH }}/src
          file: ${{ env.WORK_PATH }}/src/Dockerfile
          push: true
          tags: localhost:12345/11-java-testcontainers-via-workflows:0.1
          build-args: |
            BUILD_USER_ID=$(id -u)
            BUILD_GROUP_ID=$(id -g)

      - name: Apply manifests
        run: kubectl apply -f ${WORK_PATH}/manifests

      - name: Watch `java-testcontainers-argo  ` container logs
        run: |
          ./wait_status_code_and_logs.sh 'kubectl logs 11-argo-java-testcontainers -c main' 'BUILD SUCCESSFUL'
          kubectl logs 11-argo-java-testcontainers -c main > 11-logs.txt
          BUILD_OUTPUT=$(grep "BUILD SUCCESSFUL" 11-logs.txt)
          echo "BUILD_OUTPUT=${BUILD_OUTPUT}" >> $GITHUB_ENV

      - name: Check "java-testcontainers-argo  " container output. Extract build output and check if output is "BUILD SUCCESSFUL"
        run: |
          if [[ "${{ env.BUILD_OUTPUT }}" == *"${{ env.CHECK_BUILD_OUTPUT }}"* ]]; then
          echo "The build is successful"
          else
          echo "The build is failed"
          exit 1
          fi

      - name: Check if report is available in the report folder an report file exist
        run: |
          if [ -f ${WORK_PATH}/report/java/reports/tests/test/index.html ]; then
          echo "Report exist"
          w3m ${WORK_PATH}/report/java/reports/tests/test/index.html
          else
          echo "Report does not exist"
          exit 1
          fi
