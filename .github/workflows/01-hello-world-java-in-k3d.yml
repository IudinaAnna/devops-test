name: K-01 HelloWorld Java In K3d
on:
  push:
    paths: 
      - 'kubernetes/01-hello-world-java-in-k3d/**'
      - '.github/workflows/01-hello-world-java-in-k3d.yml'  
env:
  CHECK_POD_STATUS: "Running"
  POD_OUTPUT: "hello world!!!"
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup k3d
      uses: nolar/setup-k3d-k3s@v1

    - name: Print current path
      run: |
          echo ${{ github.workspace }}

    - name: Check working directory 
      working-directory: ${{ github.workspace }}/kubernetes/01-hello-world-java-in-k3d
      run: | 
        if [ -d "${{ github.workspace }}/kubernetes/01-hello-world-java-in-k3d" ]; then
        echo "Directory exists"
        else
        echo "Directory does not exist"
        fi
   
    - name: Check docker available
      run: docker info
   
    - name: Check if kubernetes is available
      run: k3d version
    
    - name: Check if src directory is
      run: |
        if [ -d "./kubernetes/01-hello-world-java-in-k3d/src" ]; then
        echo "Directory 'src' exists"
        else 
        echo "Error: Directory 'src' does not exist"
        exit 1
        fi
    
    - name: Check if manifests folder is
      run: |
        if [ -d "./kubernetes/01-hello-world-java-in-k3d/manifests" ]; then
        echo "Directory 'manifests' exists"
        else 
        echo "Error: manifests does not exist"
        exit 1
        fi
    
    - name: Check if src directory has Dockerfile, .java and .txt files  
      run: |
        if [ -f "./kubernetes/01-hello-world-java-in-k3d/src/Dockerfile" ] || [ -n "$(find ./kubernetes/01-hello-world-java-in-k3d/src -name '*.java' -type f)" ] || [ -n "$(find ../kubernetes/01-hello-world-java-in-k3d/src -name '*.txt' -type f)" ]; then
        ls ./kubernetes/01-hello-world-java-in-k3d/src
        echo "All files exist inside 'src' "
        else
        echo "Error: Files does not exist inside 'src' "
        exit 1
        fi
        
    - name: Check if manifests directory has pod.yml file 
      run: |
        if [ -f "./kubernetes/01-hello-world-java-in-k3d/manifests/pod.yml" ]; then
        ls ./kubernetes/01-hello-world-java-in-k3d/manifests
        echo "All files exist inside 'manifests' "
        else
        echo "Error: Files does not exist inside 'manifests' "
        exit 1
        fi

    - name: Create cluster
      run: |
        k3d cluster create demo-cluster --registry-create demo-registry:12345 
    
    - name: Build, tag and push the image
      run: |
        docker build -t 01-hello-world-java-in-k3d:0.1 ./kubernetes/01-hello-world-java-in-k3d/src
        docker tag 01-hello-world-java-in-k3d:0.1 localhost:12345/01-hello-world-java-in-k3d:0.1
        docker push localhost:12345/01-hello-world-java-in-k3d:0.1
    
    - name: Check if image was created successfully
      run: |
        IMAGE=$(docker images -q 01-hello-world-java-in-k3d:0.1)
        if [ -n "$IMAGE" ]; then
        echo "Image 01-hello-world-java-in-k3d:0.1 exists"
        else
        echo "Image 01-hello-world-java-in-k3d:0.1 does not exist"
        exit 1
        fi
    
    - name: Check if tagged image was created successfully 
      run: |
        TAGGED_IMAGE=$(docker images -q localhost:12345/01-hello-world-java-in-k3d:0.1)
        if [ -n "$TAGGED_IMAGE" ]; then
        echo "Image localhost:12345/01-hello-world-java-in-k3d:0.1 exists"
        else
        echo "Image localhost:12345/01-hello-world-java-in-k3d:0.1 does not exist"
        exit 1
        fi
        
    - name: Apply manifest 
      run: |
        kubectl apply -f ./kubernetes/01-hello-world-java-in-k3d/manifests
        sleep 5
        POD_STATUS=$(kubectl get pod 01-hello-world-java -o jsonpath='{.status.phase}')
        echo "POD_STATUS=${POD_STATUS}" >> $GITHUB_ENV
    
    - name: Checl if Pod logs present
      run: |
        sleep 30
        kubectl get pods
        kubectl describe pods
        OUTPUT=$(kubectl logs 01-hello-world-java -c 01-hello-world-java)
        echo "OUTPUT=${OUTPUT}" >> $GITHUB_ENV
        echo "OUTPUT=${OUTPUT}"
    
    - name: Verify output
      run: |
        if [[ "${{ env.OUTPUT }}" == "${{ env.POD_OUTPUT }}" ]]; then
        echo "Log output contains 'hello world!!!'"
        else
        echo "Error: Log output does not contain 'hello world!!!'"
        exit 1
        fi
    
    - name: Verify pod status
      run: |
        if [ "${{ env.POD_STATUS }}" == "${{ env.CHECK_POD_STATUS }}" ]; then
        echo "Pod is running successfully"
        else
        echo "Error: Pod is not running"
        exit 1
        fi
    
    - name: Check if pod was created only once
      run: |
        pod_count=$(kubectl get pods | grep -c "01-hello-world-java")
        if [ "$pod_count" -eq 1 ]; then
        echo "Pod was created only once"
        else
        echo "Error: Pod was created multiple times"
        exit 1
        fi
    
