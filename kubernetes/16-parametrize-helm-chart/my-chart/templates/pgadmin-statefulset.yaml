{{- if .Values.pgadmin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
 name: {{ .Values.pgadmin.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.pgadmin.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.pgadmin.name }}
    spec:
      containers:
      - name: {{ .Values.pgadmin.name }}
        image: {{ .Values.pgadmin.server.image }}  
        env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: pgadmin@pgadmin.com
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: PGADMIN_PASSWORD             
        ports:
          - name: {{ .Values.pgadmin.name }}
            containerPort: 80
            protocol: TCP 
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/pgadmin 
        readinessProbe:
          httpGet:
            path: /
            port: pgadmin
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 15
        livenessProbe:
          httpGet:
            path: /
            port: pgadmin
          initialDelaySeconds: 60
          periodSeconds: 10        
      volumes: 
         - name: postgres-storage
           hostPath: 
             path: /vol-postgres
             type: DirectoryOrCreate
      initContainers: 
      - name: {{ .Values.initContainers.name }}
        image: {{ .Values.initContainers.server.image }}
        command: ["sh","-c", "chown -R 5050:5050 /vol-postgres"]
        volumeMounts:
          - name: postgres-storage
            mountPath: /vol-postgres
{{- end }}


        
