apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels: 
    component: api
spec:
  selector:
    matchLabels:
      component: api
  template:
    metadata:
      labels:
        component: api
    spec:
      containers:
      - name: api
        envFrom: 
          - configMapRef: 
              name: postgres-config
        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
          - name: DB_URL
            value: $(DB_HOST):$(DB_PORT)/$(DB_NAME)    
        image: demo-registry:5000/spring-boot-app:0.1 
        imagePullPolicy: IfNotPresent  
        command: ["/bin/sh", "-c"]
        args: ["dockerize -wait tcp://$(DB_HOST):$(DB_PORT) -timeout 30s java -jar api.jar && sleep infinity"]
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 120
            timeoutSeconds: 15
            httpGet:
              path: /
              port: http
        readinessProbe:
            initialDelaySeconds: 100
            periodSeconds: 15
            timeoutSeconds: 15
            httpGet:
              path: /
              port: http